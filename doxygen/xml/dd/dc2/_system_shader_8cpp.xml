<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="dd/dc2/_system_shader_8cpp" kind="file">
    <compoundname>SystemShader.cpp</compoundname>
    <includes refid="db/dfc/_library_8h" local="yes">Library.h</includes>
    <incdepgraph>
      <node id="4729">
        <label>list</label>
      </node>
      <node id="4779">
        <label>SceneGame.h</label>
        <link refid="dc/d83/_scene_game_8h"/>
      </node>
      <node id="4739">
        <label>Color.h</label>
        <link refid="d9/df8/_color_8h"/>
      </node>
      <node id="4738">
        <label>Matrix.h</label>
        <link refid="d0/d45/_matrix_8h"/>
      </node>
      <node id="4757">
        <label>Status.h</label>
        <link refid="d3/ddd/_status_8h"/>
      </node>
      <node id="4719">
        <label>windows.h</label>
      </node>
      <node id="4759">
        <label>Key.h</label>
        <link refid="d7/dfc/_key_8h"/>
      </node>
      <node id="4776">
        <label>AllyDeffender.h</label>
        <link refid="de/d4d/_ally_deffender_8h"/>
      </node>
      <node id="4736">
        <label>GLFont.h</label>
        <link refid="dc/db4/_g_l_font_8h"/>
      </node>
      <node id="4774">
        <label>Ally.h</label>
        <link refid="d0/d06/_ally_8h"/>
      </node>
      <node id="4726">
        <label>stdlib.h</label>
      </node>
      <node id="4777">
        <label>AllyHealer.h</label>
        <link refid="d6/dbe/_ally_healer_8h"/>
      </node>
      <node id="4758">
        <label>IObj.h</label>
        <link refid="dd/d39/_i_obj_8h"/>
      </node>
      <node id="4767">
        <label>CameraManager.h</label>
        <link refid="db/d24/_camera_manager_8h"/>
      </node>
      <node id="4766">
        <label>Camera.h</label>
        <link refid="d5/d91/_camera_8h"/>
      </node>
      <node id="4760">
        <label>KeyAttacker.h</label>
        <link refid="d9/d42/_key_attacker_8h"/>
      </node>
      <node id="4756">
        <label>CollisionManager.h</label>
        <link refid="d7/d3e/_collision_manager_8h"/>
      </node>
      <node id="4744">
        <label>fmod.h</label>
      </node>
      <node id="4763">
        <label>KeyInput.h</label>
        <link refid="df/d48/_key_input_8h"/>
      </node>
      <node id="4755">
        <label>LandScape.h</label>
        <link refid="d5/d53/_land_scape_8h"/>
      </node>
      <node id="4727">
        <label>string</label>
      </node>
      <node id="4731">
        <label>GL/glew.h</label>
      </node>
      <node id="4737">
        <label>Vector.h</label>
        <link refid="d4/d7f/_vector_8h"/>
      </node>
      <node id="4753">
        <label>Collision.h</label>
        <link refid="d9/d87/_collision_8h"/>
      </node>
      <node id="4740">
        <label>System.h</label>
        <link refid="df/d78/_system_8h"/>
      </node>
      <node id="4735">
        <label>Singleton.h</label>
        <link refid="de/dec/_singleton_8h"/>
      </node>
      <node id="4718">
        <label>Main.h</label>
        <link refid="d0/d55/_main_8h"/>
        <childnode refid="4719" relation="include">
        </childnode>
        <childnode refid="4720" relation="include">
        </childnode>
        <childnode refid="4721" relation="include">
        </childnode>
        <childnode refid="4722" relation="include">
        </childnode>
        <childnode refid="4723" relation="include">
        </childnode>
        <childnode refid="4724" relation="include">
        </childnode>
        <childnode refid="4725" relation="include">
        </childnode>
        <childnode refid="4726" relation="include">
        </childnode>
        <childnode refid="4727" relation="include">
        </childnode>
        <childnode refid="4728" relation="include">
        </childnode>
        <childnode refid="4729" relation="include">
        </childnode>
        <childnode refid="4730" relation="include">
        </childnode>
        <childnode refid="4731" relation="include">
        </childnode>
        <childnode refid="4732" relation="include">
        </childnode>
        <childnode refid="4733" relation="include">
        </childnode>
        <childnode refid="4734" relation="include">
        </childnode>
      </node>
      <node id="4772">
        <label>Player.h</label>
        <link refid="d1/d39/_player_8h"/>
      </node>
      <node id="4733">
        <label>GL/freeglut.h</label>
      </node>
      <node id="4732">
        <label>GL/wglew.h</label>
      </node>
      <node id="4750">
        <label>BillBoard.h</label>
        <link refid="d1/d37/_bill_board_8h"/>
      </node>
      <node id="4749">
        <label>Effect.h</label>
        <link refid="dd/d44/_effect_8h"/>
      </node>
      <node id="4721">
        <label>gdiplus.h</label>
      </node>
      <node id="4730">
        <label>ctime</label>
      </node>
      <node id="4728">
        <label>vector</label>
      </node>
      <node id="4745">
        <label>Controller.h</label>
        <link refid="d2/d94/_controller_8h"/>
      </node>
      <node id="4723">
        <label>sstream</label>
      </node>
      <node id="4768">
        <label>Map.h</label>
        <link refid="d3/d63/_map_8h"/>
      </node>
      <node id="4778">
        <label>SceneTitle.h</label>
        <link refid="d6/d5f/_scene_title_8h"/>
      </node>
      <node id="4734">
        <label>Xinput.h</label>
      </node>
      <node id="4771">
        <label>SquadManager.h</label>
        <link refid="da/d9b/_squad_manager_8h"/>
      </node>
      <node id="4724">
        <label>math.h</label>
      </node>
      <node id="4747">
        <label>Texture.h</label>
        <link refid="de/dbf/_texture_8h"/>
      </node>
      <node id="4716">
        <label>E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/SystemShader.cpp</label>
        <link refid="SystemShader.cpp"/>
        <childnode refid="4717" relation="include">
        </childnode>
      </node>
      <node id="4743">
        <label>fmod.hpp</label>
      </node>
      <node id="4742">
        <label>SoundPlayer.h</label>
        <link refid="dc/d02/_sound_player_8h"/>
        <childnode refid="4743" relation="include">
        </childnode>
        <childnode refid="4744" relation="include">
        </childnode>
      </node>
      <node id="4717">
        <label>Library.h</label>
        <link refid="db/dfc/_library_8h"/>
        <childnode refid="4718" relation="include">
        </childnode>
        <childnode refid="4735" relation="include">
        </childnode>
        <childnode refid="4736" relation="include">
        </childnode>
        <childnode refid="4737" relation="include">
        </childnode>
        <childnode refid="4738" relation="include">
        </childnode>
        <childnode refid="4739" relation="include">
        </childnode>
        <childnode refid="4740" relation="include">
        </childnode>
        <childnode refid="4741" relation="include">
        </childnode>
        <childnode refid="4742" relation="include">
        </childnode>
        <childnode refid="4745" relation="include">
        </childnode>
        <childnode refid="4746" relation="include">
        </childnode>
        <childnode refid="4747" relation="include">
        </childnode>
        <childnode refid="4748" relation="include">
        </childnode>
        <childnode refid="4749" relation="include">
        </childnode>
        <childnode refid="4750" relation="include">
        </childnode>
        <childnode refid="4751" relation="include">
        </childnode>
        <childnode refid="4752" relation="include">
        </childnode>
        <childnode refid="4753" relation="include">
        </childnode>
        <childnode refid="4754" relation="include">
        </childnode>
        <childnode refid="4755" relation="include">
        </childnode>
        <childnode refid="4756" relation="include">
        </childnode>
        <childnode refid="4757" relation="include">
        </childnode>
        <childnode refid="4758" relation="include">
        </childnode>
        <childnode refid="4759" relation="include">
        </childnode>
        <childnode refid="4760" relation="include">
        </childnode>
        <childnode refid="4761" relation="include">
        </childnode>
        <childnode refid="4762" relation="include">
        </childnode>
        <childnode refid="4763" relation="include">
        </childnode>
        <childnode refid="4764" relation="include">
        </childnode>
        <childnode refid="4765" relation="include">
        </childnode>
        <childnode refid="4766" relation="include">
        </childnode>
        <childnode refid="4767" relation="include">
        </childnode>
        <childnode refid="4768" relation="include">
        </childnode>
        <childnode refid="4769" relation="include">
        </childnode>
        <childnode refid="4770" relation="include">
        </childnode>
        <childnode refid="4771" relation="include">
        </childnode>
        <childnode refid="4772" relation="include">
        </childnode>
        <childnode refid="4773" relation="include">
        </childnode>
        <childnode refid="4774" relation="include">
        </childnode>
        <childnode refid="4775" relation="include">
        </childnode>
        <childnode refid="4776" relation="include">
        </childnode>
        <childnode refid="4777" relation="include">
        </childnode>
        <childnode refid="4778" relation="include">
        </childnode>
        <childnode refid="4779" relation="include">
        </childnode>
      </node>
      <node id="4770">
        <label>Squad.h</label>
        <link refid="db/d9e/_squad_8h"/>
      </node>
      <node id="4722">
        <label>iostream</label>
      </node>
      <node id="4752">
        <label>Geometry.h</label>
        <link refid="d1/d4e/_geometry_8h"/>
      </node>
      <node id="4741">
        <label>Timer.h</label>
        <link refid="d5/d29/_timer_8h"/>
      </node>
      <node id="4754">
        <label>CollisionWall.h</label>
        <link refid="df/d58/_collision_wall_8h"/>
      </node>
      <node id="4720">
        <label>mmsystem.h</label>
      </node>
      <node id="4769">
        <label>Man.h</label>
        <link refid="d3/da6/_man_8h"/>
      </node>
      <node id="4746">
        <label>Mouse.h</label>
        <link refid="d2/de3/_mouse_8h"/>
      </node>
      <node id="4775">
        <label>AllyAttacker.h</label>
        <link refid="d9/d97/_ally_attacker_8h"/>
      </node>
      <node id="4773">
        <label>Enemy.h</label>
        <link refid="d4/d1e/_enemy_8h"/>
      </node>
      <node id="4761">
        <label>KeyDeffender.h</label>
        <link refid="d1/d11/_key_deffender_8h"/>
      </node>
      <node id="4764">
        <label>ObjBase.h</label>
        <link refid="d3/d3e/_obj_base_8h"/>
      </node>
      <node id="4751">
        <label>SystemShader.h</label>
        <link refid="dd/d98/_system_shader_8h"/>
      </node>
      <node id="4748">
        <label>Model.h</label>
        <link refid="da/ded/_model_8h"/>
      </node>
      <node id="4725">
        <label>stdio.h</label>
      </node>
      <node id="4765">
        <label>CameraBase.h</label>
        <link refid="db/db8/_camera_base_8h"/>
      </node>
      <node id="4762">
        <label>KeyHealer.h</label>
        <link refid="db/d50/_key_healer_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/dfc/_library_8h" kindref="compound">Library.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>外部非公開</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d5/d84/class_system_shader" kindref="compound">SystemShader</ref><sp/>gSystemShader;<sp/></highlight><highlight class="comment">//<sp/>実体</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal">};</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>静的変数の宣言</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>SystemShader::s_logBuffer[MAX_SHADER_LOG_SIZE];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">GLuint<sp/>SystemShader::vertShader;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal">GLuint<sp/>SystemShader::fragShader;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal">GLuint<sp/>SystemShader::gl2Program[SHADER_MAX];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//GLuint<sp/>SystemShader::gl2Program;<sp/><sp/>//!&lt;<sp/>適用用のプログラム</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="d5/d84/class_system_shader_1a372fad007b14e7d934913e85140bd0e1" kindref="member">SystemShader::SystemShader</ref>()</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="38"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="d5/d84/class_system_shader_1aea4c03c6d6f48b122c699497523bc690" kindref="member">SystemShader::~SystemShader</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="47"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d84/class_system_shader_1ac08cac17b68ec15c287cdc96bd6e4112" kindref="member">SystemShader::Init</ref>()</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>glewInit()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="d0/d55/_main_8h_1a0ce6887c26c1c49ad3be5710dd42bfd6" kindref="member">s32</ref><sp/>i=0;<sp/>i&lt;<ref refid="d5/d84/class_system_shader_1a045af48fcf9fd181b1504389a204cadcaa3a02ca217f89e34796dfb3146ca79c4" kindref="member">SHADER_MAX</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="d5/d84/class_system_shader_1a0c83332ff8654ede8d80a9932e93db62" kindref="member">InitShader</ref>(<sp/>(<ref refid="d5/d84/class_system_shader_1a045af48fcf9fd181b1504389a204cadc" kindref="member">SHADER_MODE</ref>)(i)<sp/>)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="66"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d84/class_system_shader_1a59985b4737cf4263cf372a4f5ea1c60d" kindref="member">SystemShader::Cleanup</ref>()</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="73"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d84/class_system_shader_1a0c83332ff8654ede8d80a9932e93db62" kindref="member">SystemShader::InitShader</ref>(SHADER_MODE<sp/>mode)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>GLint<sp/>compiled,<sp/>linked;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>vertShader<sp/>=<sp/>glCreateShader(GL_VERTEX_SHADER);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>fragShader<sp/>=<sp/>glCreateShader(GL_FRAGMENT_SHADER);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mode<sp/>==<sp/><ref refid="d5/d84/class_system_shader_1a045af48fcf9fd181b1504389a204cadcad4c9a15c9fe56663a6d8ab42b1bea9bd" kindref="member">SHADER_NORMAL</ref>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="d5/d84/class_system_shader_1a64a0d6a15611c301d22ee90fdb93e6f1" kindref="member">readShaderSource</ref>(vertShader,<sp/></highlight><highlight class="stringliteral">&quot;noTexture.vert&quot;</highlight><highlight class="normal">)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="d5/d84/class_system_shader_1a64a0d6a15611c301d22ee90fdb93e6f1" kindref="member">readShaderSource</ref>(fragShader,<sp/></highlight><highlight class="stringliteral">&quot;noTexture.frag&quot;</highlight><highlight class="normal">)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mode<sp/>==<sp/><ref refid="d5/d84/class_system_shader_1a045af48fcf9fd181b1504389a204cadcacb7eeae7f61ee30d58c4c185a14c767d" kindref="member">SHADER_TEXTURE</ref><sp/>){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="d5/d84/class_system_shader_1a64a0d6a15611c301d22ee90fdb93e6f1" kindref="member">readShaderSource</ref>(vertShader,<sp/></highlight><highlight class="stringliteral">&quot;Texture.vert&quot;</highlight><highlight class="normal">)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="d5/d84/class_system_shader_1a64a0d6a15611c301d22ee90fdb93e6f1" kindref="member">readShaderSource</ref>(fragShader,<sp/></highlight><highlight class="stringliteral">&quot;Texture.frag&quot;</highlight><highlight class="normal">)<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if(<sp/>!readShaderSource(vertShader,<sp/>&quot;Test.vert&quot;)<sp/>)<sp/>return<sp/>false;</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>!readShaderSource(fragShader,<sp/>&quot;Test.frag&quot;)<sp/>)<sp/>return<sp/>false;*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(vertShader);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(vertShader,<sp/>GL_COMPILE_STATUS,<sp/>&amp;compiled);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>printShaderInfoLog(vertShader);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compiled<sp/>==<sp/>GL_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox(NULL,<sp/>L</highlight><highlight class="stringliteral">&quot;Compile<sp/>error<sp/>in<sp/>vertex<sp/>shader.\n&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>MB_OK);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;Compile<sp/>error<sp/>in<sp/>vertex<sp/>shader.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>glCompileShader(fragShader);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(fragShader,<sp/>GL_COMPILE_STATUS,<sp/>&amp;compiled);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>printShaderInfoLog(fragShader);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compiled<sp/>==<sp/>GL_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox(NULL,<sp/>L</highlight><highlight class="stringliteral">&quot;Compile<sp/>error<sp/>in<sp/>fragment<sp/>shader.\n&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>MB_OK);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;Compile<sp/>error<sp/>in<sp/>fragment<sp/>shader.\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>gl2Program[mode]<sp/>=<sp/>glCreateProgram();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(gl2Program[mode],<sp/>vertShader);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>glAttachShader(gl2Program[mode],<sp/>fragShader);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(vertShader);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>glDeleteShader(fragShader);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>glLinkProgram(gl2Program[mode]);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(gl2Program[mode],<sp/>GL_LINK_STATUS,<sp/>&amp;linked);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>printProgramInfoLog(gl2Program[mode]);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linked<sp/>==<sp/>GL_FALSE)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox(NULL,<sp/>L</highlight><highlight class="stringliteral">&quot;Link<sp/>error.\n&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>MB_OK);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Link<sp/>error.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mode<sp/>==<sp/><ref refid="d5/d84/class_system_shader_1a045af48fcf9fd181b1504389a204cadcacb7eeae7f61ee30d58c4c185a14c767d" kindref="member">SHADER_TEXTURE</ref><sp/>){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(gl2Program[mode],<sp/></highlight><highlight class="stringliteral">&quot;texture&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="147"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d5/d84/class_system_shader_1a64a0d6a15611c301d22ee90fdb93e6f1" kindref="member">SystemShader::readShaderSource</ref>(GLuint<sp/>shader,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>errno_t<sp/>err;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/>fp;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>size;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>GLchar*<sp/>source;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ファイルを開く</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((err<sp/>=<sp/>fopen_s(&amp;fp,<sp/>fileName,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox(NULL,<sp/>L</highlight><highlight class="stringliteral">&quot;file<sp/>is<sp/>not<sp/>found!!\n&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>MB_OK);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;%s<sp/>is<sp/>not<sp/>found!!\n&quot;,<sp/>fileName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(fp,<sp/>0,<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>ftell(fp);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(source<sp/>=<sp/>(GLchar*)malloc(size))<sp/>==<sp/>NULL<sp/>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox(NULL,<sp/>L</highlight><highlight class="stringliteral">&quot;Memory<sp/>is<sp/>not<sp/>enough<sp/>for<sp/>this<sp/>file\n&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>MB_OK);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;Memory<sp/>is<sp/>not<sp/>enough<sp/>for<sp/>%s\n&quot;,<sp/>fileName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(fp,<sp/>0,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>fread((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)source,<sp/>1,<sp/>size,<sp/>fp)<sp/>!=<sp/>(size_t)size;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox(NULL,<sp/>L</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>read<sp/>file\n&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>MB_OK);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;Could<sp/>not<sp/>read<sp/>file:<sp/>%s<sp/>\n&quot;,<sp/>&amp;size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glShaderSource(shader,<sp/>1,<sp/>&amp;source,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)source);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="199"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d84/class_system_shader_1a429ec01976737272f3ed206f3c6b615e" kindref="member">SystemShader::beginShader</ref>(SHADER_MODE<sp/>mode)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(gl2Program[mode]);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="208"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d84/class_system_shader_1aacafa83c1f764897a12c47cc547d1a61" kindref="member">SystemShader::endShader</ref>()</highlight></codeline>
<codeline lineno="210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>glUseProgram(GL_NONE);</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="219"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SystemShader::printShaderInfoLog(GLuint<sp/>shader)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>logSize;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ログの長さは、最後のNULL文字も含む<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetShaderiv(shader,<sp/>GL_INFO_LOG_LENGTH<sp/>,<sp/>&amp;logSize);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logSize<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetShaderInfoLog(shader,<sp/>MAX_SHADER_LOG_SIZE,<sp/>&amp;length,<sp/>s_logBuffer);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stringstream<sp/>str;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Shader<sp/>Info<sp/>Log&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>&lt;&lt;<sp/>s_logBuffer;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBoxA(NULL,<sp/>str.str().c_str(),<sp/>NULL,<sp/>MB_OK);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fprintf(stderr,<sp/>&quot;Shader<sp/>Info<sp/>Log\n%s\n&quot;,<sp/>s_logBuffer);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="243"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SystemShader::printProgramInfoLog(GLuint<sp/>program)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>logSize;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ログの長さは、最後のNULL文字も含む<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>glGetProgramiv(program,<sp/>GL_INFO_LOG_LENGTH<sp/>,<sp/>&amp;logSize);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(logSize<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramInfoLog(program,<sp/>MAX_SHADER_LOG_SIZE,<sp/>&amp;length,<sp/>s_logBuffer);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Program<sp/>Info<sp/>Log\n%s\n&quot;</highlight><highlight class="normal">,<sp/>s_logBuffer);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>END<sp/>OF<sp/>FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight></codeline>
    </programlisting>
    <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/SystemShader.cpp"/>
  </compounddef>
</doxygen>
