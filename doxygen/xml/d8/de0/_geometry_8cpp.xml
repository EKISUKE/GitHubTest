<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="d8/de0/_geometry_8cpp" kind="file">
    <compoundname>Geometry.cpp</compoundname>
    <includes refid="db/dfc/_library_8h" local="yes">Library.h</includes>
    <incdepgraph>
      <node id="1775">
        <label>list</label>
      </node>
      <node id="1825">
        <label>SceneGame.h</label>
        <link refid="dc/d83/_scene_game_8h"/>
      </node>
      <node id="1785">
        <label>Color.h</label>
        <link refid="d9/df8/_color_8h"/>
      </node>
      <node id="1784">
        <label>Matrix.h</label>
        <link refid="d0/d45/_matrix_8h"/>
      </node>
      <node id="1803">
        <label>Status.h</label>
        <link refid="d3/ddd/_status_8h"/>
      </node>
      <node id="1765">
        <label>windows.h</label>
      </node>
      <node id="1805">
        <label>Key.h</label>
        <link refid="d7/dfc/_key_8h"/>
      </node>
      <node id="1822">
        <label>AllyDeffender.h</label>
        <link refid="de/d4d/_ally_deffender_8h"/>
      </node>
      <node id="1782">
        <label>GLFont.h</label>
        <link refid="dc/db4/_g_l_font_8h"/>
      </node>
      <node id="1820">
        <label>Ally.h</label>
        <link refid="d0/d06/_ally_8h"/>
      </node>
      <node id="1772">
        <label>stdlib.h</label>
      </node>
      <node id="1823">
        <label>AllyHealer.h</label>
        <link refid="d6/dbe/_ally_healer_8h"/>
      </node>
      <node id="1804">
        <label>IObj.h</label>
        <link refid="dd/d39/_i_obj_8h"/>
      </node>
      <node id="1813">
        <label>CameraManager.h</label>
        <link refid="db/d24/_camera_manager_8h"/>
      </node>
      <node id="1812">
        <label>Camera.h</label>
        <link refid="d5/d91/_camera_8h"/>
      </node>
      <node id="1806">
        <label>KeyAttacker.h</label>
        <link refid="d9/d42/_key_attacker_8h"/>
      </node>
      <node id="1802">
        <label>CollisionManager.h</label>
        <link refid="d7/d3e/_collision_manager_8h"/>
      </node>
      <node id="1790">
        <label>fmod.h</label>
      </node>
      <node id="1809">
        <label>KeyInput.h</label>
        <link refid="df/d48/_key_input_8h"/>
      </node>
      <node id="1801">
        <label>LandScape.h</label>
        <link refid="d5/d53/_land_scape_8h"/>
      </node>
      <node id="1773">
        <label>string</label>
      </node>
      <node id="1777">
        <label>GL/glew.h</label>
      </node>
      <node id="1783">
        <label>Vector.h</label>
        <link refid="d4/d7f/_vector_8h"/>
      </node>
      <node id="1799">
        <label>Collision.h</label>
        <link refid="d9/d87/_collision_8h"/>
      </node>
      <node id="1786">
        <label>System.h</label>
        <link refid="df/d78/_system_8h"/>
      </node>
      <node id="1781">
        <label>Singleton.h</label>
        <link refid="de/dec/_singleton_8h"/>
      </node>
      <node id="1764">
        <label>Main.h</label>
        <link refid="d0/d55/_main_8h"/>
        <childnode refid="1765" relation="include">
        </childnode>
        <childnode refid="1766" relation="include">
        </childnode>
        <childnode refid="1767" relation="include">
        </childnode>
        <childnode refid="1768" relation="include">
        </childnode>
        <childnode refid="1769" relation="include">
        </childnode>
        <childnode refid="1770" relation="include">
        </childnode>
        <childnode refid="1771" relation="include">
        </childnode>
        <childnode refid="1772" relation="include">
        </childnode>
        <childnode refid="1773" relation="include">
        </childnode>
        <childnode refid="1774" relation="include">
        </childnode>
        <childnode refid="1775" relation="include">
        </childnode>
        <childnode refid="1776" relation="include">
        </childnode>
        <childnode refid="1777" relation="include">
        </childnode>
        <childnode refid="1778" relation="include">
        </childnode>
        <childnode refid="1779" relation="include">
        </childnode>
        <childnode refid="1780" relation="include">
        </childnode>
      </node>
      <node id="1818">
        <label>Player.h</label>
        <link refid="d1/d39/_player_8h"/>
      </node>
      <node id="1779">
        <label>GL/freeglut.h</label>
      </node>
      <node id="1778">
        <label>GL/wglew.h</label>
      </node>
      <node id="1796">
        <label>BillBoard.h</label>
        <link refid="d1/d37/_bill_board_8h"/>
      </node>
      <node id="1795">
        <label>Effect.h</label>
        <link refid="dd/d44/_effect_8h"/>
      </node>
      <node id="1767">
        <label>gdiplus.h</label>
      </node>
      <node id="1776">
        <label>ctime</label>
      </node>
      <node id="1762">
        <label>E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/Geometry.cpp</label>
        <link refid="Geometry.cpp"/>
        <childnode refid="1763" relation="include">
        </childnode>
      </node>
      <node id="1774">
        <label>vector</label>
      </node>
      <node id="1791">
        <label>Controller.h</label>
        <link refid="d2/d94/_controller_8h"/>
      </node>
      <node id="1769">
        <label>sstream</label>
      </node>
      <node id="1814">
        <label>Map.h</label>
        <link refid="d3/d63/_map_8h"/>
      </node>
      <node id="1824">
        <label>SceneTitle.h</label>
        <link refid="d6/d5f/_scene_title_8h"/>
      </node>
      <node id="1780">
        <label>Xinput.h</label>
      </node>
      <node id="1817">
        <label>SquadManager.h</label>
        <link refid="da/d9b/_squad_manager_8h"/>
      </node>
      <node id="1770">
        <label>math.h</label>
      </node>
      <node id="1793">
        <label>Texture.h</label>
        <link refid="de/dbf/_texture_8h"/>
      </node>
      <node id="1789">
        <label>fmod.hpp</label>
      </node>
      <node id="1788">
        <label>SoundPlayer.h</label>
        <link refid="dc/d02/_sound_player_8h"/>
        <childnode refid="1789" relation="include">
        </childnode>
        <childnode refid="1790" relation="include">
        </childnode>
      </node>
      <node id="1763">
        <label>Library.h</label>
        <link refid="db/dfc/_library_8h"/>
        <childnode refid="1764" relation="include">
        </childnode>
        <childnode refid="1781" relation="include">
        </childnode>
        <childnode refid="1782" relation="include">
        </childnode>
        <childnode refid="1783" relation="include">
        </childnode>
        <childnode refid="1784" relation="include">
        </childnode>
        <childnode refid="1785" relation="include">
        </childnode>
        <childnode refid="1786" relation="include">
        </childnode>
        <childnode refid="1787" relation="include">
        </childnode>
        <childnode refid="1788" relation="include">
        </childnode>
        <childnode refid="1791" relation="include">
        </childnode>
        <childnode refid="1792" relation="include">
        </childnode>
        <childnode refid="1793" relation="include">
        </childnode>
        <childnode refid="1794" relation="include">
        </childnode>
        <childnode refid="1795" relation="include">
        </childnode>
        <childnode refid="1796" relation="include">
        </childnode>
        <childnode refid="1797" relation="include">
        </childnode>
        <childnode refid="1798" relation="include">
        </childnode>
        <childnode refid="1799" relation="include">
        </childnode>
        <childnode refid="1800" relation="include">
        </childnode>
        <childnode refid="1801" relation="include">
        </childnode>
        <childnode refid="1802" relation="include">
        </childnode>
        <childnode refid="1803" relation="include">
        </childnode>
        <childnode refid="1804" relation="include">
        </childnode>
        <childnode refid="1805" relation="include">
        </childnode>
        <childnode refid="1806" relation="include">
        </childnode>
        <childnode refid="1807" relation="include">
        </childnode>
        <childnode refid="1808" relation="include">
        </childnode>
        <childnode refid="1809" relation="include">
        </childnode>
        <childnode refid="1810" relation="include">
        </childnode>
        <childnode refid="1811" relation="include">
        </childnode>
        <childnode refid="1812" relation="include">
        </childnode>
        <childnode refid="1813" relation="include">
        </childnode>
        <childnode refid="1814" relation="include">
        </childnode>
        <childnode refid="1815" relation="include">
        </childnode>
        <childnode refid="1816" relation="include">
        </childnode>
        <childnode refid="1817" relation="include">
        </childnode>
        <childnode refid="1818" relation="include">
        </childnode>
        <childnode refid="1819" relation="include">
        </childnode>
        <childnode refid="1820" relation="include">
        </childnode>
        <childnode refid="1821" relation="include">
        </childnode>
        <childnode refid="1822" relation="include">
        </childnode>
        <childnode refid="1823" relation="include">
        </childnode>
        <childnode refid="1824" relation="include">
        </childnode>
        <childnode refid="1825" relation="include">
        </childnode>
      </node>
      <node id="1816">
        <label>Squad.h</label>
        <link refid="db/d9e/_squad_8h"/>
      </node>
      <node id="1768">
        <label>iostream</label>
      </node>
      <node id="1798">
        <label>Geometry.h</label>
        <link refid="d1/d4e/_geometry_8h"/>
      </node>
      <node id="1787">
        <label>Timer.h</label>
        <link refid="d5/d29/_timer_8h"/>
      </node>
      <node id="1800">
        <label>CollisionWall.h</label>
        <link refid="df/d58/_collision_wall_8h"/>
      </node>
      <node id="1766">
        <label>mmsystem.h</label>
      </node>
      <node id="1815">
        <label>Man.h</label>
        <link refid="d3/da6/_man_8h"/>
      </node>
      <node id="1792">
        <label>Mouse.h</label>
        <link refid="d2/de3/_mouse_8h"/>
      </node>
      <node id="1821">
        <label>AllyAttacker.h</label>
        <link refid="d9/d97/_ally_attacker_8h"/>
      </node>
      <node id="1819">
        <label>Enemy.h</label>
        <link refid="d4/d1e/_enemy_8h"/>
      </node>
      <node id="1807">
        <label>KeyDeffender.h</label>
        <link refid="d1/d11/_key_deffender_8h"/>
      </node>
      <node id="1810">
        <label>ObjBase.h</label>
        <link refid="d3/d3e/_obj_base_8h"/>
      </node>
      <node id="1797">
        <label>SystemShader.h</label>
        <link refid="dd/d98/_system_shader_8h"/>
      </node>
      <node id="1794">
        <label>Model.h</label>
        <link refid="da/ded/_model_8h"/>
      </node>
      <node id="1771">
        <label>stdio.h</label>
      </node>
      <node id="1811">
        <label>CameraBase.h</label>
        <link refid="db/db8/_camera_base_8h"/>
      </node>
      <node id="1808">
        <label>KeyHealer.h</label>
        <link refid="db/d50/_key_healer_8h"/>
      </node>
    </incdepgraph>
    <innernamespace refid="d9/dc1/namespacecollision">collision</innernamespace>
    <briefdescription>
<para>物体 </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>YukiIshigaki </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="db/dfc/_library_8h" kindref="compound">Library.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="d9/dc1/namespacecollision" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">collision<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><ref refid="d9/dc1/namespacecollision_1ae993c2d6b1c3275b5ddbf45525d36129" kindref="member">getDistance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d0f/struct_plane" kindref="compound">Plane</ref>&amp;<sp/>plane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref>&amp;<sp/>position)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>距離は「<sp/>Ax<sp/>+<sp/>By<sp/>+<sp/>Cz<sp/>+<sp/>D<sp/>」で計算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d0/de3/struct_vector3_1a320f377d62a53de63377c78d1e724a11" kindref="member">Vector3::dot</ref>(plane.<ref refid="d3/d0f/struct_plane_1a63fed40cafac842d07e82f2ee66ddd71" kindref="member">getNormal</ref>(),<sp/>position)<sp/>+<sp/>plane.<ref refid="d3/d0f/struct_plane_1a0e8b30b00f8e086dee3750e7924dfb63" kindref="member">_distance</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="31"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/namespacecollision_1ad9fbb73486f863e0bea46797d1de961a" kindref="member">checkHitPos</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4f/struct_triangle" kindref="compound">Triangle</ref>&amp;<sp/>triangle,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d9d/struct_line" kindref="compound">Line</ref>&amp;<sp/><sp/><sp/><sp/><sp/>line,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHitPosition,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pT,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHitNormal<sp/><sp/>)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>平面との衝突判定と交差位置を計算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><sp/><sp/><sp/><sp/>t;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>hit<sp/>=<sp/><ref refid="d9/dc1/namespacecollision_1a534dafd512534a0cf85cb0744f586d0e" kindref="member">collision::isHit</ref>(<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d0f/struct_plane" kindref="compound">Plane</ref>)triangle,<sp/>line,<sp/>&amp;t);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!hit<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>パラメーターtから座標を計算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref><sp/>hitPosition<sp/>=<sp/>line.<ref refid="d2/d9d/struct_line_1ad1eac3c5d397339f4d2c962a0a1eab72" kindref="member">getPosition</ref>(t);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>三角形の点に含まれてなければ一番近い点を返す</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hitPosition<sp/>=<sp/>triangle.<ref refid="d3/d0f/struct_plane_1aa6d3d7915a022f511974dca828e4d170" kindref="member">getHitPos</ref>(<sp/>hitPosition<sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>結果の保存出力</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/>*pT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pHitPosition<sp/>)<sp/><sp/>*pHitPosition<sp/>=<sp/>hitPosition;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pHitNormal<sp/><sp/><sp/>)<sp/><sp/>*pHitNormal<sp/><sp/><sp/>=<sp/>triangle.<ref refid="d3/d0f/struct_plane_1a63fed40cafac842d07e82f2ee66ddd71" kindref="member">getNormal</ref>();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="70"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/namespacecollision_1a534dafd512534a0cf85cb0744f586d0e" kindref="member">isHit</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d5/d4f/struct_triangle" kindref="compound">Triangle</ref>&amp;<sp/>triangle,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d9d/struct_line" kindref="compound">Line</ref>&amp;<sp/><sp/><sp/><sp/><sp/>line,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHitPosition,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pT,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pHitNormal<sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>平面との衝突判定と交差位置を計算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><sp/><sp/><sp/><sp/>t;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>hit<sp/>=<sp/><ref refid="d9/dc1/namespacecollision_1a534dafd512534a0cf85cb0744f586d0e" kindref="member">collision::isHit</ref>(<sp/>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d0f/struct_plane" kindref="compound">Plane</ref>)triangle,<sp/>line,<sp/>&amp;t);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!hit<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>パラメーターtから座標を計算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref><sp/>hitPosition<sp/>=<sp/>line.<ref refid="d2/d9d/struct_line_1ad1eac3c5d397339f4d2c962a0a1eab72" kindref="member">getPosition</ref>(t);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>三角形の中に衝突点が含まれるかどうかをチェック</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hit<sp/>=<sp/>triangle.isHit(<sp/>hitPosition<sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!hit<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>結果の保存出力</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/><sp/>*pT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pHitPosition<sp/>)<sp/><sp/>*pHitPosition<sp/>=<sp/>hitPosition;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pHitNormal<sp/><sp/><sp/>)<sp/><sp/>*pHitNormal<sp/><sp/><sp/>=<sp/>triangle.<ref refid="d3/d0f/struct_plane_1a63fed40cafac842d07e82f2ee66ddd71" kindref="member">getNormal</ref>();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/namespacecollision_1a534dafd512534a0cf85cb0744f586d0e" kindref="member">isHit</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d3/d0f/struct_plane" kindref="compound">Plane</ref>&amp;<sp/>plane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d2/d9d/struct_line" kindref="compound">Line</ref>&amp;<sp/>line,<sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref>*<sp/>pT)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref><sp/>S<sp/>=<sp/>line.<ref refid="d2/d9d/struct_line_1af3c45cc53927ae76abe807ec32bd181d" kindref="member">_position</ref>[0];<sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref><sp/>E<sp/>=<sp/>line.<ref refid="d2/d9d/struct_line_1af3c45cc53927ae76abe807ec32bd181d" kindref="member">_position</ref>[1];<sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>平面の方程式から直線の始点Sと終点Eの高さ<sp/>(HS,<sp/>HE)を計算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-◎S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>↑<sp/><sp/><sp/><sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>↓<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>---------------●----------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>↑<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>＼<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>↓HE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-◎E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>HS<sp/>=<sp/><ref refid="d9/dc1/namespacecollision_1ae993c2d6b1c3275b5ddbf45525d36129" kindref="member">collision::getDistance</ref>(plane,<sp/>S);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>HE<sp/>=<sp/><ref refid="d9/dc1/namespacecollision_1ae993c2d6b1c3275b5ddbf45525d36129" kindref="member">collision::getDistance</ref>(plane,<sp/>E);<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>始点終点が同じなら終了</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>HS<sp/>==<sp/>HE<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>HS,HE<sp/>2つの比率からパラメーターtを計算</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-◎S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>↑<sp/>　<sp/>|＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>HS<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>↓<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------+--------●-------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>↑<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>＼<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>↓HE<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>＼</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>-<sp/>-<sp/>+<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-<sp/>-◎E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>パラメータtの計算<sp/>(0≦t≦1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>t<sp/>=<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>線形補間のためHSの割合を求める</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>t<sp/>=<sp/>HS<sp/>/<sp/>(HS<sp/>-<sp/>HE);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>情報を返す</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pT<sp/>)<sp/>*pT<sp/>=<sp/>t;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>トライアングル(三角形)の実装</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="167"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d5/d4f/struct_triangle_1ad963391905b9b061f1bbb69dce87494e" kindref="member">Triangle::debugRender</ref>(<ref refid="d9/d44/struct_color" kindref="compound">Color</ref>&amp;<sp/>col)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ポリゴンオフセット機能によってポリゴンを少し奥へずらす</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(ラインとのZファイト防止)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>glPolygonOffset(-5.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_POLYGON_OFFSET_FILL);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>カラー</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>glColor4ubv((GLubyte*)&amp;col);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glMaterialfv(GL_FRONT,<sp/>GL_AMBIENT_AND_DIFFUSE,<sp/>(GLfloat*)&amp;col);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>glBegin(GL_TRIANGLES);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3fv((GLfloat*)&amp;<ref refid="d5/d4f/struct_triangle_1a2138d57a641e85b40dfb79dbbb14f733" kindref="member">_position</ref>[0]);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3fv((GLfloat*)&amp;<ref refid="d5/d4f/struct_triangle_1a2138d57a641e85b40dfb79dbbb14f733" kindref="member">_position</ref>[1]);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3fv((GLfloat*)&amp;<ref refid="d5/d4f/struct_triangle_1a2138d57a641e85b40dfb79dbbb14f733" kindref="member">_position</ref>[2]);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_POLYGON_OFFSET_FILL);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ライン(直線)の実装</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="195"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d2/d9d/struct_line_1a0501a1de160dc2b156282b27f0030651" kindref="member">Line::DebugRender</ref>()</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>glPushMatrix();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBegin(GL_LINES);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3fv((GLfloat*)&amp;<ref refid="d2/d9d/struct_line_1af3c45cc53927ae76abe807ec32bd181d" kindref="member">_position</ref>[0]);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3fv((GLfloat*)&amp;<ref refid="d2/d9d/struct_line_1af3c45cc53927ae76abe807ec32bd181d" kindref="member">_position</ref>[1]);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>glPopMatrix();</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">//<sp/>球の実装</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="216"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/da7/struct_sphere_1a868014478336015b67b677052028592e" kindref="member">Sphere::isHit</ref>(<ref refid="db/da7/struct_sphere" kindref="compound">Sphere</ref>&amp;<sp/>sphere)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/d87/_collision_8h_1a1c711b386e73b8f5dd6ebfd2c66b513f" kindref="member">ISystemCollision</ref>()-&gt;<ref refid="d0/d54/class_system_collision_1a4c8970a0a387f87a07aa5ea80f11e591" kindref="member">HitSphere</ref>(_position,<sp/>sphere.<ref refid="db/da7/struct_sphere_1a5e5181db4f2a86d94fff712bba98e900" kindref="member">getPosition</ref>(),<sp/>_radius,<sp/>sphere.<ref refid="db/da7/struct_sphere_1a6564eb07eb9b62503ecc71d032e51e7b" kindref="member">getRadius</ref>());</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="224"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/da7/struct_sphere_1ace72594a2c4b1a20789ceb3bb26907cd" kindref="member">Sphere::DebugRender</ref>()</highlight></codeline>
<codeline lineno="226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>glPushMatrix();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glTranslatef(<sp/>_position.<ref refid="d0/de3/struct_vector3_1a345b01a1352e569e37d0226af4eff5c6" kindref="member">_x</ref>,<sp/>_position.<ref refid="d0/de3/struct_vector3_1a5e3cec066537515a2387a34b57aed6ed" kindref="member">_y</ref>,<sp/>_position.<ref refid="d0/de3/struct_vector3_1a895ad23c1a78588ace5c4aaadae984c5" kindref="member">_z</ref><sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/de5/_system_8cpp_1a277688499453031c044d4f913a9e4ebe" kindref="member">setBlendMode</ref>(<ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2aa66971ef5a43bb7b8914143d08dc33d2" kindref="member">BM_ADD</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//================================<sp/>【半透明処理開始】</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glutSolidSphere(_radius,16,16);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/de5/_system_8cpp_1a277688499453031c044d4f913a9e4ebe" kindref="member">setBlendMode</ref>(<ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2aab7041f3706bde3b1572c4d2d0b18583" kindref="member">BM_NONE</ref>);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//================================<sp/>【半透明処理終了】</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>glPopMatrix();</highlight></codeline>
<codeline lineno="233"><highlight class="normal">}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">//<sp/>円の実装</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="242"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dc/ddb/struct_circle_1aa0bb65bacc01e44df8d9662ebb5c51bb" kindref="member">Circle::isHit</ref>(<ref refid="dc/ddb/struct_circle" kindref="compound">Circle</ref>&amp;<sp/>circle)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/d87/_collision_8h_1a1c711b386e73b8f5dd6ebfd2c66b513f" kindref="member">ISystemCollision</ref>()-&gt;<ref refid="d0/d54/class_system_collision_1afb11088c991d7810e7bbf90b2fd21a91" kindref="member">HitCircle</ref>(_position,<sp/>circle.<ref refid="dc/ddb/struct_circle_1a0341f55bea7bfdd478293aa1eb370354" kindref="member">getPosition</ref>(),<sp/>_radius,<sp/>circle.<ref refid="dc/ddb/struct_circle_1a11b296c081d56bfdbd13a196e6a6faa0" kindref="member">getRadius</ref>());</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="250"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dc/ddb/struct_circle_1a73bb3c9db1121886036d91efb3f6ee09" kindref="member">Circle::DebugRender</ref>()</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/df6/class_degree" kindref="compound">Degree</ref><sp/>rot1,<sp/>rot2;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>x,y;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>x<sp/>=<sp/>_position.<ref refid="d0/de3/struct_vector3_1a345b01a1352e569e37d0226af4eff5c6" kindref="member">_x</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>y<sp/>=<sp/>_position.<ref refid="d0/de3/struct_vector3_1a895ad23c1a78588ace5c4aaadae984c5" kindref="member">_z</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>rot1.<ref refid="db/df6/class_degree_1afb0e7feba9785028e108a5156533fad7" kindref="member">_degree</ref><sp/>=<sp/>0.0f;<sp/>rot1.<ref refid="db/df6/class_degree_1afb0e7feba9785028e108a5156533fad7" kindref="member">_degree</ref><sp/>&lt;=<sp/>360.0f;<sp/>rot1.<ref refid="db/df6/class_degree_1afb0e7feba9785028e108a5156533fad7" kindref="member">_degree</ref><sp/>+=<sp/>1.0f<sp/>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rot2.<ref refid="db/df6/class_degree_1afb0e7feba9785028e108a5156533fad7" kindref="member">_degree</ref><sp/>=<sp/>rot1.<ref refid="db/df6/class_degree_1afb0e7feba9785028e108a5156533fad7" kindref="member">_degree</ref><sp/>+<sp/>10.0f;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d2f/class_radian" kindref="compound">Radian</ref><sp/>rot1Rad(rot1);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d2f/class_radian" kindref="compound">Radian</ref><sp/>rot2Rad(rot2);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>x1<sp/>=<sp/>_radius<sp/>*<sp/>cosf(rot1Rad);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>y1<sp/>=<sp/>_radius<sp/>*<sp/>sinf(rot1Rad);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>x2<sp/>=<sp/>_radius<sp/>*<sp/>cosf(rot2Rad);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>y2<sp/>=<sp/>_radius<sp/>*<sp/>sinf(rot2Rad);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBegin(GL_TRIANGLES);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex2f(x,y);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex2f(x1+x,<sp/>y1+y);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex2f(x2+x,<sp/>y2+y);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>END<sp/>OF<sp/>FILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//=============================================================================</highlight></codeline>
    </programlisting>
    <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/Geometry.cpp"/>
  </compounddef>
</doxygen>
