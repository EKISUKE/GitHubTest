<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="d8/de5/_system_8cpp" kind="file">
    <compoundname>System.cpp</compoundname>
    <includes refid="db/dfc/_library_8h" local="yes">Library.h</includes>
    <incdepgraph>
      <node id="4616">
        <label>list</label>
      </node>
      <node id="4666">
        <label>SceneGame.h</label>
        <link refid="dc/d83/_scene_game_8h"/>
      </node>
      <node id="4626">
        <label>Color.h</label>
        <link refid="d9/df8/_color_8h"/>
      </node>
      <node id="4625">
        <label>Matrix.h</label>
        <link refid="d0/d45/_matrix_8h"/>
      </node>
      <node id="4644">
        <label>Status.h</label>
        <link refid="d3/ddd/_status_8h"/>
      </node>
      <node id="4606">
        <label>windows.h</label>
      </node>
      <node id="4646">
        <label>Key.h</label>
        <link refid="d7/dfc/_key_8h"/>
      </node>
      <node id="4663">
        <label>AllyDeffender.h</label>
        <link refid="de/d4d/_ally_deffender_8h"/>
      </node>
      <node id="4623">
        <label>GLFont.h</label>
        <link refid="dc/db4/_g_l_font_8h"/>
      </node>
      <node id="4661">
        <label>Ally.h</label>
        <link refid="d0/d06/_ally_8h"/>
      </node>
      <node id="4613">
        <label>stdlib.h</label>
      </node>
      <node id="4664">
        <label>AllyHealer.h</label>
        <link refid="d6/dbe/_ally_healer_8h"/>
      </node>
      <node id="4645">
        <label>IObj.h</label>
        <link refid="dd/d39/_i_obj_8h"/>
      </node>
      <node id="4654">
        <label>CameraManager.h</label>
        <link refid="db/d24/_camera_manager_8h"/>
      </node>
      <node id="4653">
        <label>Camera.h</label>
        <link refid="d5/d91/_camera_8h"/>
      </node>
      <node id="4647">
        <label>KeyAttacker.h</label>
        <link refid="d9/d42/_key_attacker_8h"/>
      </node>
      <node id="4643">
        <label>CollisionManager.h</label>
        <link refid="d7/d3e/_collision_manager_8h"/>
      </node>
      <node id="4631">
        <label>fmod.h</label>
      </node>
      <node id="4650">
        <label>KeyInput.h</label>
        <link refid="df/d48/_key_input_8h"/>
      </node>
      <node id="4642">
        <label>LandScape.h</label>
        <link refid="d5/d53/_land_scape_8h"/>
      </node>
      <node id="4614">
        <label>string</label>
      </node>
      <node id="4618">
        <label>GL/glew.h</label>
      </node>
      <node id="4624">
        <label>Vector.h</label>
        <link refid="d4/d7f/_vector_8h"/>
      </node>
      <node id="4640">
        <label>Collision.h</label>
        <link refid="d9/d87/_collision_8h"/>
      </node>
      <node id="4627">
        <label>System.h</label>
        <link refid="df/d78/_system_8h"/>
      </node>
      <node id="4622">
        <label>Singleton.h</label>
        <link refid="de/dec/_singleton_8h"/>
      </node>
      <node id="4605">
        <label>Main.h</label>
        <link refid="d0/d55/_main_8h"/>
        <childnode refid="4606" relation="include">
        </childnode>
        <childnode refid="4607" relation="include">
        </childnode>
        <childnode refid="4608" relation="include">
        </childnode>
        <childnode refid="4609" relation="include">
        </childnode>
        <childnode refid="4610" relation="include">
        </childnode>
        <childnode refid="4611" relation="include">
        </childnode>
        <childnode refid="4612" relation="include">
        </childnode>
        <childnode refid="4613" relation="include">
        </childnode>
        <childnode refid="4614" relation="include">
        </childnode>
        <childnode refid="4615" relation="include">
        </childnode>
        <childnode refid="4616" relation="include">
        </childnode>
        <childnode refid="4617" relation="include">
        </childnode>
        <childnode refid="4618" relation="include">
        </childnode>
        <childnode refid="4619" relation="include">
        </childnode>
        <childnode refid="4620" relation="include">
        </childnode>
        <childnode refid="4621" relation="include">
        </childnode>
      </node>
      <node id="4659">
        <label>Player.h</label>
        <link refid="d1/d39/_player_8h"/>
      </node>
      <node id="4620">
        <label>GL/freeglut.h</label>
      </node>
      <node id="4619">
        <label>GL/wglew.h</label>
      </node>
      <node id="4637">
        <label>BillBoard.h</label>
        <link refid="d1/d37/_bill_board_8h"/>
      </node>
      <node id="4636">
        <label>Effect.h</label>
        <link refid="dd/d44/_effect_8h"/>
      </node>
      <node id="4608">
        <label>gdiplus.h</label>
      </node>
      <node id="4617">
        <label>ctime</label>
      </node>
      <node id="4615">
        <label>vector</label>
      </node>
      <node id="4632">
        <label>Controller.h</label>
        <link refid="d2/d94/_controller_8h"/>
      </node>
      <node id="4610">
        <label>sstream</label>
      </node>
      <node id="4655">
        <label>Map.h</label>
        <link refid="d3/d63/_map_8h"/>
      </node>
      <node id="4665">
        <label>SceneTitle.h</label>
        <link refid="d6/d5f/_scene_title_8h"/>
      </node>
      <node id="4621">
        <label>Xinput.h</label>
      </node>
      <node id="4658">
        <label>SquadManager.h</label>
        <link refid="da/d9b/_squad_manager_8h"/>
      </node>
      <node id="4611">
        <label>math.h</label>
      </node>
      <node id="4634">
        <label>Texture.h</label>
        <link refid="de/dbf/_texture_8h"/>
      </node>
      <node id="4630">
        <label>fmod.hpp</label>
      </node>
      <node id="4629">
        <label>SoundPlayer.h</label>
        <link refid="dc/d02/_sound_player_8h"/>
        <childnode refid="4630" relation="include">
        </childnode>
        <childnode refid="4631" relation="include">
        </childnode>
      </node>
      <node id="4604">
        <label>Library.h</label>
        <link refid="db/dfc/_library_8h"/>
        <childnode refid="4605" relation="include">
        </childnode>
        <childnode refid="4622" relation="include">
        </childnode>
        <childnode refid="4623" relation="include">
        </childnode>
        <childnode refid="4624" relation="include">
        </childnode>
        <childnode refid="4625" relation="include">
        </childnode>
        <childnode refid="4626" relation="include">
        </childnode>
        <childnode refid="4627" relation="include">
        </childnode>
        <childnode refid="4628" relation="include">
        </childnode>
        <childnode refid="4629" relation="include">
        </childnode>
        <childnode refid="4632" relation="include">
        </childnode>
        <childnode refid="4633" relation="include">
        </childnode>
        <childnode refid="4634" relation="include">
        </childnode>
        <childnode refid="4635" relation="include">
        </childnode>
        <childnode refid="4636" relation="include">
        </childnode>
        <childnode refid="4637" relation="include">
        </childnode>
        <childnode refid="4638" relation="include">
        </childnode>
        <childnode refid="4639" relation="include">
        </childnode>
        <childnode refid="4640" relation="include">
        </childnode>
        <childnode refid="4641" relation="include">
        </childnode>
        <childnode refid="4642" relation="include">
        </childnode>
        <childnode refid="4643" relation="include">
        </childnode>
        <childnode refid="4644" relation="include">
        </childnode>
        <childnode refid="4645" relation="include">
        </childnode>
        <childnode refid="4646" relation="include">
        </childnode>
        <childnode refid="4647" relation="include">
        </childnode>
        <childnode refid="4648" relation="include">
        </childnode>
        <childnode refid="4649" relation="include">
        </childnode>
        <childnode refid="4650" relation="include">
        </childnode>
        <childnode refid="4651" relation="include">
        </childnode>
        <childnode refid="4652" relation="include">
        </childnode>
        <childnode refid="4653" relation="include">
        </childnode>
        <childnode refid="4654" relation="include">
        </childnode>
        <childnode refid="4655" relation="include">
        </childnode>
        <childnode refid="4656" relation="include">
        </childnode>
        <childnode refid="4657" relation="include">
        </childnode>
        <childnode refid="4658" relation="include">
        </childnode>
        <childnode refid="4659" relation="include">
        </childnode>
        <childnode refid="4660" relation="include">
        </childnode>
        <childnode refid="4661" relation="include">
        </childnode>
        <childnode refid="4662" relation="include">
        </childnode>
        <childnode refid="4663" relation="include">
        </childnode>
        <childnode refid="4664" relation="include">
        </childnode>
        <childnode refid="4665" relation="include">
        </childnode>
        <childnode refid="4666" relation="include">
        </childnode>
      </node>
      <node id="4657">
        <label>Squad.h</label>
        <link refid="db/d9e/_squad_8h"/>
      </node>
      <node id="4609">
        <label>iostream</label>
      </node>
      <node id="4639">
        <label>Geometry.h</label>
        <link refid="d1/d4e/_geometry_8h"/>
      </node>
      <node id="4628">
        <label>Timer.h</label>
        <link refid="d5/d29/_timer_8h"/>
      </node>
      <node id="4641">
        <label>CollisionWall.h</label>
        <link refid="df/d58/_collision_wall_8h"/>
      </node>
      <node id="4607">
        <label>mmsystem.h</label>
      </node>
      <node id="4656">
        <label>Man.h</label>
        <link refid="d3/da6/_man_8h"/>
      </node>
      <node id="4633">
        <label>Mouse.h</label>
        <link refid="d2/de3/_mouse_8h"/>
      </node>
      <node id="4662">
        <label>AllyAttacker.h</label>
        <link refid="d9/d97/_ally_attacker_8h"/>
      </node>
      <node id="4660">
        <label>Enemy.h</label>
        <link refid="d4/d1e/_enemy_8h"/>
      </node>
      <node id="4648">
        <label>KeyDeffender.h</label>
        <link refid="d1/d11/_key_deffender_8h"/>
      </node>
      <node id="4651">
        <label>ObjBase.h</label>
        <link refid="d3/d3e/_obj_base_8h"/>
      </node>
      <node id="4603">
        <label>E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp</label>
        <link refid="System.cpp"/>
        <childnode refid="4604" relation="include">
        </childnode>
      </node>
      <node id="4638">
        <label>SystemShader.h</label>
        <link refid="dd/d98/_system_shader_8h"/>
      </node>
      <node id="4635">
        <label>Model.h</label>
        <link refid="da/ded/_model_8h"/>
      </node>
      <node id="4612">
        <label>stdio.h</label>
      </node>
      <node id="4652">
        <label>CameraBase.h</label>
        <link refid="db/db8/_camera_base_8h"/>
      </node>
      <node id="4649">
        <label>KeyHealer.h</label>
        <link refid="db/d50/_key_healer_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/de5/_system_8cpp_1a266360ae47bdbc184ec9986ba9409c0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
        <definition>f32 TO_RADIAN</definition>
        <argsstring>(f32 deg)</argsstring>
        <name>TO_RADIAN</name>
        <param>
          <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
          <declname>deg</declname>
        </param>
        <briefdescription>
<para>ラジアンに変換 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" line="13" column="1" bodyfile="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="d8/de5/_system_8cpp_1a32cbba7683ec3c5a8c25e5a7396ccf15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
        <definition>f32 TO_DEGREE</definition>
        <argsstring>(f32 rad)</argsstring>
        <name>TO_DEGREE</name>
        <param>
          <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
          <declname>rad</declname>
        </param>
        <briefdescription>
<para>デグリーに変換 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" line="21" column="1" bodyfile="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="d8/de5/_system_8cpp_1acaf4aa7f4af8905e6af8409d438cdbae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
        <definition>f32 LinearInterpolation</definition>
        <argsstring>(f32 start, f32 end, f32 frame, f32 maxFrame)</argsstring>
        <name>LinearInterpolation</name>
        <param>
          <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
          <declname>frame</declname>
        </param>
        <param>
          <type><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref></type>
          <declname>maxFrame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>線形補間(frameの値はSからEの間の値に収まる) P&apos; = (E - S) * f / maxf + S <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>最小値(始点) 上記のSに当たる </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">end</parametername>
</parameternamelist>
<parameterdescription>
<para>最大値(終点) 上記のEに当たる </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para>現在の値 上記のfに当たる </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">maxFrame</parametername>
</parameternamelist>
<parameterdescription>
<para>値の最大値 上記のmaxfに当たる </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" line="34" column="1" bodyfile="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d8/de5/_system_8cpp_1a277688499453031c044d4f913a9e4ebe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setBlendMode</definition>
        <argsstring>(BLEND_MODE mode)</argsstring>
        <name>setBlendMode</name>
        <param>
          <type><ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2" kindref="member">BLEND_MODE</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>ブレンドモードを設定 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mode</parametername>
</parameternamelist>
<parameterdescription>
<para>ブレンドモード </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" line="42" column="1" bodyfile="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" bodystart="42" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d8/de5/_system_8cpp_1a021fe70824954a3b66a929ac363988da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float getGLFps</definition>
        <argsstring>()</argsstring>
        <name>getGLFps</name>
        <briefdescription>
<para>FPS取得 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" line="76" column="1" bodyfile="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" bodystart="76" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="d8/de5/_system_8cpp_1addf84914650715cdc37101f0cdbb62fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void render_string</definition>
        <argsstring>(float x, float y, std::string const &amp;str)</argsstring>
        <name>render_string</name>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>文字列表示 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" line="97" column="1" bodyfile="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" bodystart="97" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="d8/de5/_system_8cpp_1a8490eaf01d7201b54121f8be681401e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DebugPointRender</definition>
        <argsstring>(Vector3 &amp;pos)</argsstring>
        <name>DebugPointRender</name>
        <param>
          <type><ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>点の描画 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" line="108" column="1" bodyfile="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp" bodystart="108" bodyend="131"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>汎用的関数群 </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>YukiIshigaki </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include&quot;<ref refid="db/dfc/_library_8h" kindref="compound">Library.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><sp/><sp/><sp/><sp/><ref refid="d8/de5/_system_8cpp_1a266360ae47bdbc184ec9986ba9409c0b" kindref="member">TO_RADIAN</ref>(<ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><sp/><sp/>deg)</highlight></codeline>
<codeline lineno="14"><highlight class="normal">{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>deg<sp/>*<sp/>3.14159f<sp/>/<sp/>180.0f;</highlight></codeline>
<codeline lineno="16"><highlight class="normal">}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="20"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><sp/><sp/><sp/><sp/><ref refid="d8/de5/_system_8cpp_1a32cbba7683ec3c5a8c25e5a7396ccf15" kindref="member">TO_DEGREE</ref>(<ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><sp/><sp/>rad)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rad<sp/>*<sp/>180.0f<sp/>/<sp/>3.14159f;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="33"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/><ref refid="d8/de5/_system_8cpp_1acaf4aa7f4af8905e6af8409d438cdbae" kindref="member">LinearInterpolation</ref>(<sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>start<sp/>,<sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>end<sp/>,<sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>frame,<sp/><ref refid="d0/d55/_main_8h_1a5f6906312a689f27d70e9d086649d3fd" kindref="member">f32</ref><sp/>maxFrame){</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)(end<sp/>-<sp/>start)<sp/>*<sp/>frame<sp/>/<sp/>maxFrame<sp/>+<sp/>start);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="41"><highlight class="comment"></highlight><highlight class="comment">//---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/de5/_system_8cpp_1a277688499453031c044d4f913a9e4ebe" kindref="member">setBlendMode</ref>(<ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2" kindref="member">BLEND_MODE</ref><sp/>mode)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>半透明ブレンド<sp/>ON/OFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mode<sp/>==<sp/><ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2aab7041f3706bde3b1572c4d2d0b18583" kindref="member">BM_NONE</ref><sp/>)<sp/>{<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>OFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDisable(GL_BLEND);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----<sp/>ON</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ブレンドモードの合成比率の設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>mode<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2aab7041f3706bde3b1572c4d2d0b18583" kindref="member">BM_NONE</ref>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2aa4b5f56689268250b8e5eb291ecd7352" kindref="member">BM_BLEND</ref>:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>元の色と足して１になる</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2aa66971ef5a43bb7b8914143d08dc33d2" kindref="member">BM_ADD</ref>:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ソースの色が加算される(元の色より暗くならない)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="75"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="d8/de5/_system_8cpp_1a021fe70824954a3b66a929ac363988da" kindref="member">getGLFps</ref>()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>resultFps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLframe;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLtimebase;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GLtimenow;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>GLframe++;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>GLtimenow<sp/>=<sp/>glutGet(GLUT_ELAPSED_TIME);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GLtimenow<sp/>-<sp/>GLtimebase<sp/>&gt;<sp/>1000)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resultFps<sp/>=<sp/>GLframe<sp/>*<sp/>1000.0<sp/>/<sp/>(GLtimenow<sp/>-<sp/>GLtimebase);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLtimebase<sp/>=<sp/>GLtimenow;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GLframe<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resultFps;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="96"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/de5/_system_8cpp_1addf84914650715cdc37101f0cdbb62fd" kindref="member">render_string</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>str)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>glRasterPos3f(x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>glutBitmapString(GLUT_BITMAP_TIMES_ROMAN_24,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)str.c_str());</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight><highlight class="comment">//-----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/de5/_system_8cpp_1a8490eaf01d7201b54121f8be681401e5" kindref="member">DebugPointRender</ref>(<ref refid="d0/de3/struct_vector3" kindref="compound">Vector3</ref>&amp;<sp/>pos)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>点にアンチエリアシング処理を行う<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_POINT_SMOOTH);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>アンチエリアシング処理の品質を最高にする<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>glHint(GL_POINT_SMOOTH_HINT,<sp/>GL_NICEST);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>アルファブレンディングを有効にする<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glEnable(GL_BLEND);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/de5/_system_8cpp_1a277688499453031c044d4f913a9e4ebe" kindref="member">setBlendMode</ref>(<ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2aa66971ef5a43bb7b8914143d08dc33d2" kindref="member">BM_ADD</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>glPointSize(10);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>glPushMatrix();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBegin(GL_POINTS);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glVertex3fv((GLfloat*)&amp;pos);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnd();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>glPopMatrix();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glDisable(GL_BLEND);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/de5/_system_8cpp_1a277688499453031c044d4f913a9e4ebe" kindref="member">setBlendMode</ref>(<ref refid="df/d78/_system_8h_1aa034b11c7e1268e84fe133233afdf1c2aab7041f3706bde3b1572c4d2d0b18583" kindref="member">BM_NONE</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_POINT_SMOOTH);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="comment">//void<sp/>view2D()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glMatrixMode(GL_PROJECTION);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>射影変換行列設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glPushMatrix();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>現在の射影変換行列を保存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glOrtho(0,<sp/>WIDTH,<sp/>HEIGHT,<sp/>0,<sp/>-1,<sp/>1);<sp/><sp/><sp/><sp/>//<sp/>正射影変換設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glMatrixMode(GL_MODELVIEW);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>モデルビュー変換行列設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glPushMatrix();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>現在のモデルビュー行列を保存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glLoadIdentity();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>単位行列を設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glPushMatrix();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight><highlight class="comment">//void<sp/>view3D()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glPopMatrix();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glMatrixMode(GL_MODELVIEW);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>モデルビュー変換行列設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glPopMatrix();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>モデルビュー行列を復元</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glMatrixMode(GL_PROJECTION);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>射影変換行列設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glPopMatrix();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>射影変換行列を復元</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glLoadIdentity();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>単位行列を設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">//void<sp/>view2D()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glDisable(GL_DEPTH_TEST);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glDisable(GL_CULL_FACE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glMatrixMode(GL_PROJECTION);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>射影変換行列設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glPushMatrix();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>現在の射影変換行列を保存</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glLoadIdentity();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glOrtho(0,<sp/>WIDTH,<sp/>HEIGHT,<sp/>0,<sp/>-1,<sp/>1);<sp/><sp/><sp/><sp/>//<sp/>正射影変換設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glMatrixMode(GL_MODELVIEW);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>モデルビュー変換行列設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glLoadIdentity();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>単位行列を設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="174"><highlight class="comment"></highlight><highlight class="comment">//void<sp/>view3D()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glEnable(GL_DEPTH_TEST);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glEnable(GL_CULL_FACE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glMatrixMode(GL_PROJECTION);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>射影変換行列設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glPopMatrix();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>射影変換行列を復元</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>glMatrixMode(GL_MODELVIEW);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>モデルビュー変換行列設定</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="E:/OCA/OCA_BackUp/OpenGL/GameProj/当たり判定と職種作成とシェーダ(10_10)/src/System.cpp"/>
  </compounddef>
</doxygen>
