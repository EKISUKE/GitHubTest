//-----------------------------------------------------------------------------
//!
//!	@file	gmMouseManager.h
//!	@brief	マウス管理
//!	@author	YukiIshigaki
//!
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
//!	マウス管理
//-----------------------------------------------------------------------------
class MouseManager
{
	//-------------------------------------------------------------
	//! @name 初期化
	//-------------------------------------------------------------
	//@{
private:
	//!	コンストラクタ
    MouseManager();
	//! コピーコンストラクタ
	MouseManager(MouseManager& src){}
	//! デストラクタ
	virtual ~MouseManager();

	//@}
	//-------------------------------------------------------------
	//! @name 作成
	//-------------------------------------------------------------
	//@{
public:	
	//! マウス作成
	//!	@retval 作成したコントローラーのポインタ nullなら失敗
	Mouse*	createMouse();

	//@}
	//-------------------------------------------------------------
	//! @name 取得・設定
	//-------------------------------------------------------------
	//@{
	
	//! インスタンス取得
	static MouseManager* getInstance() {
		static MouseManager	_myInstance;
		return &_myInstance;
	}

	//! 指定した番号のマウス取得
	//Mouse*	getMouse(s32 number) { return _pVecMouse.at(number-1); }
	//! マウス取得
	Mouse*	getMouse() { return _pMouse; }

	//@}
private:
	Mouse*					_pMouse;
	//s32						_currentCreateCount;	//!< 現在作成されたマウス数
	//vector<Mouse*>			_pVecMouse;				//!< マウスのリスト
};


//-----------------------------------------------------------------------------
//	アクセスインターフェイス
//-----------------------------------------------------------------------------
__forceinline
MouseManager* GmMouseMan()
{
	return MouseManager::getInstance();
}


//=============================================================================
//	END OF FILE
//=============================================================================