//-----------------------------------------------------------------------------
//!
//!	@file	gmAssetBase.h
//!	@brief	アセット基底
//!	@author Yuki Ishigaki
//!
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
//	アセット専用型情報
//-----------------------------------------------------------------------------
#define GM_ASSET_TYPE( CLASS_ ) GM_TYPE( CLASS_ )			\
															\
	static CLASS_*	create(const char* path)				\
	{														\
		return (CLASS_*)createAsset(CLASS_::TYPE, path);	\
	}														\
															\
	/* 型情報クラスからはnewを許可 */						\
	friend class ClassType<CLASS_>;							\

//-----------------------------------------------------------------------------
//! アセット基底
//-----------------------------------------------------------------------------
class AssetBase : public Base
{
public:
	GM_ASSET_TYPE(AssetBase)

	//-------------------------------------------------------------
	//!	@name	初期化
	//-------------------------------------------------------------
	//@{
protected:

	// ※システムを経由しない直接のnew/delete禁止
	//! コンストラクタ
	AssetBase(){};

	//! デストラクタ
	virtual ~AssetBase(){};
public:
	//@}
	//-------------------------------------------------------------
	//!	@name	アセット関数
	//!	関数を継承してカスタム
	//-------------------------------------------------------------
	//@{
		
	//! 読み込み
	virtual bool			load(const char* path) { return true; }

	//@}
protected:
	//-------------------------------------------------------------
	//	アセット作成アクセス関数
	//-------------------------------------------------------------
	//@{

	//! アセットの読み込み作成
	//! @param	[in]	type	アセットの型情報
	//!	@param	[in]	path	ファイルパス
	//!	@return	アセットのクラス(NULLなら失敗)
	static AssetBase*		createAsset(const Type& type, const char* path);

	//@}

};

//=============================================================================
//	END OF FILE
//=============================================================================
