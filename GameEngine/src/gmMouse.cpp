//-----------------------------------------------------------------------------
//!
//!	@file	gmMouse.cpp
//!	@brief	マウス制御
//!	@author	YukiIshigaki
//!
//-----------------------------------------------------------------------------
#include "stdafx.h"


//-----------------------------------------------------------------------------
//! コンストラクタ
//-----------------------------------------------------------------------------
Mouse::Mouse()
: _leftButton  (false)
, _rightButton (false)
, _middleButton(false)
{
	//-------------------------------------------------------------
	// マウスカーソルの位置を取得
	//-------------------------------------------------------------
	GetCursorPos(&_point);

	// 初回実行時は現在のマウスカーソルの位置を以前の位置にもセットしておく
	_oldPoint    = _point;
	_changeWheel = 0.0f;
}

//-----------------------------------------------------------------------------
//! デストラクタ
//-----------------------------------------------------------------------------
Mouse::~Mouse()
{
}

//-----------------------------------------------------------------------------
//! 1フレーム分の更新
//-----------------------------------------------------------------------------
void Mouse::Update()
{
	//---- 今入っているものを以前のフレームとして使用
	_oldPoint = _point;
	
	//-------------------------------------------------------------
	// マウスカーソルの位置を取得
	//-------------------------------------------------------------
	GetCursorPos(&_point);

	s32 w = GetSystemMetrics(SM_CXSCREEN);
	s32 h = GetSystemMetrics(SM_CYSCREEN);

	//---- 画面外に言ったら補正する(補正してもoldとの差分を変えないためoldも引いている)
	if(_point.x <= 0){
		_point.x	+= (w - 2);
		_oldPoint.x += (w - 2);
	}
	if(_point.x >= w - 1){
		_point.x	-= (w - 1);
		_oldPoint.x -= (w - 1);
	}
	if(_point.y <= 0){
		_point.y	+= (h - 2);
		_oldPoint.y += (h - 2);
	}
	if(_point.y >= h - 1){
		_point.y	-= (h - 1);
		_oldPoint.y -= (h - 1);
	}

	SetCursorPos(_point.x, _point.y);
}

//-----------------------------------------------------------------------------
//! ホイール
//-----------------------------------------------------------------------------
void Mouse::MouseWheel(int wheel_number, int direction, int x, int y)
{
	_oldWheel = _wheel;

	if(direction==1){
		_wheel++;
	}else{
		_wheel--;
	}
	
	_changeWheel = (_wheel - _oldWheel) * 2.0f;
}

//-----------------------------------------------------------------------------
//! マウス関数
//-----------------------------------------------------------------------------
void Mouse::MouseFunc(s32 button_number, s32 state, s32 x, s32 y)
{
	bool isDown = (state == GLUT_DOWN) ? true : false;

	switch(button_number){
	case GLUT_LEFT_BUTTON:
		_leftButton = isDown;
		break;
	case GLUT_RIGHT_BUTTON:
		_rightButton = isDown;
		break;
	case GLUT_MIDDLE_BUTTON:
		_middleButton = isDown;
		break;
	}
}

//-----------------------------------------------------------------------------
//! カーソル移動量を取得
//-----------------------------------------------------------------------------
POINT Mouse::getOffset() const
{
	POINT result;
	result.x = _point.x - _oldPoint.x;
	result.y = _point.y - _oldPoint.y;

	return result;
}





//=============================================================================
//	END OF FILE
//=============================================================================