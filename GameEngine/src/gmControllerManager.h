//-----------------------------------------------------------------------------
//!
//!	@file	gmControllerManager.h
//!	@brief	コントローラー管理
//!	@author	YukiIshigaki
//!
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
//!	コントローラー管理
//-----------------------------------------------------------------------------
class ControllerManager
{
	//-------------------------------------------------------------
	//! @name 初期化
	//-------------------------------------------------------------
	//@{
private:
	//!	コンストラクタ
    ControllerManager();
	//! コピーコンストラクタ
	ControllerManager(ControllerManager& src){}
	//! デストラクタ
	virtual ~ControllerManager();

	//@}
	//-------------------------------------------------------------
	//! @name 作成
	//-------------------------------------------------------------
	//@{
public:	
	//! コントローラーの作成
	//!	@retval 作成したコントローラーのポインタ nullなら失敗
	Controller*	createController();

	//@}
	//-------------------------------------------------------------
	//! @name 取得・設定
	//-------------------------------------------------------------
	//@{
	
	//! インスタンス取得
	static ControllerManager* getInstance() {
		static ControllerManager _myInstance;
		return &_myInstance;
	}

	//! 指定した番号のコントローラー取得
	Controller*	getController(s32 number) { return _pVecController.at(number-1); }

	//@}
private:
	s32							_currentCreateCount;	//!< 現在作成されたコントローラ数
	vector<Controller*>			_pVecController;		//!< コントローラーのリスト
};


//-----------------------------------------------------------------------------
//	アクセスインターフェイス
//-----------------------------------------------------------------------------
__forceinline
ControllerManager* GmControlMan()
{
	return ControllerManager::getInstance();
}


//=============================================================================
//	END OF FILE
//=============================================================================