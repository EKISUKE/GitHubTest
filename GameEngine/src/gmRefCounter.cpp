//===========================================================================
//!
//!	@file	gmRefCounter.cpp
//!	@brief	全クラスの基底
//!
//===========================================================================
#include "stdafx.h"

//---------------------------------------------------------------------------
//	コンストラクタ
//---------------------------------------------------------------------------
RefCounter::RefCounter(void)
: _refCount(1)
{
}

//---------------------------------------------------------------------------
//	デストラクタ
//---------------------------------------------------------------------------
RefCounter::~RefCounter(void)
{
}

//---------------------------------------------------------------------------
//	解放
//---------------------------------------------------------------------------
void RefCounter::cleanup(void)
{
}

//---------------------------------------------------------------------------
//	参照カウンタをインクリメント
//!	@return	インクリメント後の参照カウンタ値
//---------------------------------------------------------------------------
s32 RefCounter::addRef(void)
{
	_refCount++;

	return _refCount;
}

//---------------------------------------------------------------------------
//	解放
//!	@return 解放後の参照カウンタ値
//---------------------------------------------------------------------------
s32 RefCounter::release(void)
{
	_refCount--;

	s32	refCount =_refCount;	// ローカル変数に値を残しておく

	if( _refCount <= 0 ) {
		//------------------------------------------------------------
		// 他の参照がなくなった時点で解放
		//------------------------------------------------------------
		cleanup();		// C++の仕様上、deleteの処理内でデストラクタが実行されるが
						// そのときには仮想関数が使えなくなっている。
						// cleanup() 関数内では仮想関数がまだ使える。
	
		delete this;	// 自分自身を削除
						// ※注意 削除後にメンバ変数にアクセスしてはならない。
	}

	return refCount;
}

//---------------------------------------------------------------------------
//	現在の参照カウンタを取得
//---------------------------------------------------------------------------
s32 RefCounter::getRefCounter(void)
{
	return _refCount;
}

//===========================================================================
//	END OF FILE
//===========================================================================
