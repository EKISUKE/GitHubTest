//-----------------------------------------------------------------------------
//!
//!	@file	gmCameraMaganger.cpp
//!	@brief	カメラ管理クラス
//!	@author	YukiIshigaki
//!
//-----------------------------------------------------------------------------
#include "stdafx.h"


//-----------------------------------------------------------------------------
//! デフォルトコンストラクタ
//-----------------------------------------------------------------------------
CameraManager::CameraManager()
:currentIndex(0)
{
}

//-----------------------------------------------------------------------------
//! デストラクタ
//-----------------------------------------------------------------------------
CameraManager::~CameraManager()
{
	vector<CameraBase*>::iterator itr;
	for( itr = _pVecCamera.begin(); itr != _pVecCamera.end(); )
	{
		CameraBase* camera = *itr;
		SAFE_DELETE(camera);
		itr = _pVecCamera.erase(itr);
	}
}


//-----------------------------------------------------------------------------
//! カメラを作成
//!	@param	[in]	camera 追加するカメラ
//-----------------------------------------------------------------------------
void CameraManager::createCamera(CameraBase* camera)
{
	_pVecCamera.push_back(camera);
}

//-----------------------------------------------------------------------------
//! 指定したカメラを削除
//!	@param	[in]	Index 削除するカメラのインデックス番号
//-----------------------------------------------------------------------------
void CameraManager::deleteCamera(s32 Index)
{
	vector<CameraBase*>::iterator itr;
	CameraBase*	 cam = *itr + Index;
	delete cam;
	_pVecCamera.erase(itr + Index);
}


//=============================================================================
//	END OF FILE
//=============================================================================