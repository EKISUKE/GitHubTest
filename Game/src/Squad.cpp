//-----------------------------------------------------------------------------
//!
//!	@file	Squad.cpp
//!	@brief	分隊
//!	@author YukiIshigaki
//!
//-----------------------------------------------------------------------------
#include "Library.h"

//-----------------------------------------------------------------------------
// 静的変数
//-----------------------------------------------------------------------------
//const s32 Squad::MEMBER_MAX;

const Vector3 Squad::offsetPosition[MEMBER_MAX] =
{
	Vector3(-60.0f, 0.0f,  -40.0f),		// メンバー1
	Vector3( 60.0f, 0.0f,  -40.0f),		// メンバー2
	Vector3(-60.0f, 0.0f, -100.0f),		// メンバー3
	Vector3( 60.0f, 0.0f, -100.0f),		// メンバー4
	Vector3(-60.0f, 0.0f, -160.0f),		// メンバー5
	Vector3( 60.0f, 0.0f, -160.0f),		// メンバー6
	Vector3(0.0f, 0.0f, 0.0f),			// メンバー7
	Vector3(0.0f, 0.0f, 0.0f),			// メンバー8
	Vector3(0.0f, 0.0f, 0.0f),			// メンバー9
	Vector3(0.0f, 0.0f, 0.0f)			// メンバー10
};

//-----------------------------------------------------------------------------
//! メンバーの追加
//-----------------------------------------------------------------------------
void Squad::addMenber(Man* member)
{
	s32 Index = _pMemberList.size();	

	// 登録最大数を超えてたら処理しない
	if( Index >= MEMBER_MAX ) return;
	
	Member* addMem = getSameMember(member);
	// 見つからなかったら
	if(addMem == nullptr)
	{
		// 新しく作って追加
		addMem = new Member();
		addMem->_me = member;
		addMem->_offsetPosition = offsetPosition[Index];
	}

}

//-----------------------------------------------------------------------------
//! メンバーの離脱
//-----------------------------------------------------------------------------
void Squad::leftMenber(Man* member)
{
	// 離脱するメンバーのポインタを取得
	Member*	leftMem = getSameMember(member);
	// 見つかったら
	if( leftMem )
	{
		// 削除
		_pMemberList.remove(leftMem);
	}
}
//=============================================================================
//	END OF FILE
//=============================================================================