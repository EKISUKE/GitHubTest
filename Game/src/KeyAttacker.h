//-----------------------------------------------------------------------------
//!
//!	@file	KeyAttacker.h
//!	@brief	攻撃タイプの操作
//!	@author	YukiIshigaki
//!
//-----------------------------------------------------------------------------
#pragma once

//-----------------------------------------------------------------------------
//!	AI(攻撃タイプ)
//-----------------------------------------------------------------------------
class KeyAttacker : public AI
{
public:
	//! 行動状態
	//@{

	enum MODE
	{
		MODE_SEARCH,	//!< 目標捜索
		MODE_APPROACH,	//!< 目標に接近
		MODE_ATTACK,	//!< 目標を攻撃
		MODE_MAX		//!< 状態遷移の最大
	};

	//@}
public:

	//-------------------------------------------------------------
	//! @name 初期化
	//-------------------------------------------------------------
	//@{

	//! デフォルトコンストラクタ
	KeyAttacker(Man* me, Man* leader);
	//! デストラクタ
	virtual ~KeyAttacker();

	//@}
	//-------------------------------------------------------------
	//! @name タスク関数
	//-------------------------------------------------------------
	//@{

	//! 更新
	virtual void Update();

	//@}
protected:
	f32				_searchReach;		//!< 目標捜索範囲
	f32				_searchRot;			//!< 探索方向
	f32				_attackReach;		//!< 攻撃可能範囲

	

	MODE			_mode;				//!< 行動状態用

};


//=============================================================================
//	END OF FILE
//=============================================================================